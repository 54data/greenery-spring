<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mycompany.miniproject.dao.ReviewDao" >
	
	<select id="getReviewImgById" resultType="Review" parameterType="int">
		select review_id, product_id, order_id, review_img, review_img_type, review_img_name
		from review
		where review_id = #{review_id}
		order by review_reg_date desc
	</select>
	
	<select id="getReviewsById" resultType="Review">
    select
        review_num, review_id, product_id, order_id, user_id, review_content, review_reg_date, 
        review_score, review_recom, review_img, review_img_type, review_img_name
    from (
        select
            review_id, product_id, order_id, user_id, review_content, review_reg_date, 
            review_score, review_recom, review_img, review_img_type, review_img_name,
            row_number() over (
                <choose>
                    <when test="sortOrder == 'latest'">
                        order by review_reg_date desc
                    </when>
                    <when test="sortOrder == 'rating'">
                        order by review_score desc
                    </when>
                    <otherwise>
                        order by review_reg_date desc  
                    </otherwise>
                </choose>
            ) as review_num
        from review
        where product_id = #{productId}
    )
    where review_num between #{pager.startRowNo} and #{pager.endRowNo}
	</select>
    
	<select id="countRows" resultType="int">
	    select count(*) from review where product_id = #{productId} 
	</select>
	
	<insert id="insertReview" parameterType="Review">
	    insert into review (review_id, product_id, user_id, review_content, review_reg_date, review_score, order_id
	        <if test="reviewImg != null">, review_img</if>
	        <if test="reviewImgType != null">, review_img_type</if>
	        <if test="reviewImgName != null">, review_img_name</if>
	    )
	    values (review_seq.nextval, #{productId}, #{userId}, #{reviewContent}, sysdate, #{reviewScore}, #{orderId}
	        <if test="reviewImg != null">, #{reviewImg}</if>
	        <if test="reviewImgType != null">, #{reviewImgType}</if>
	        <if test="reviewImgName != null">, #{reviewImgName}</if>
	    )
	</insert>
	
	<select id="countUserReviewForProduct" resultType="int" parameterType="map">
	    SELECT COUNT(*) FROM review 
	    WHERE order_id = #{orderId} and product_id = #{productId}
	</select>
	
	<delete id="deleteReview" parameterType="int">
	    DELETE FROM review WHERE review_id = #{reviewId}
	</delete>
	
	<update id="updateReview" parameterType="Review">
		update review set
			review_id = #{reviewId}, 
			product_id = #{productId}, 
			user_id = #{userId}, 
			review_content = #{reviewContent}, 
			review_reg_date = sysdate, 
			review_score = #{reviewScore}, 
			order_id = #{orderId}
	        <if test="reviewImg != null">, review_img = #{reviewImg}</if>
	        <if test="reviewImgType != null">, review_img_type = #{reviewImgType}</if>
	        <if test="reviewImgName != null">, review_img_name = #{reviewImgName}</if>
	   where review_id = #{reviewId}     
	</update>
	
	<select id="getReview" resultType="Review" parameterType="map">
		select review_id, product_id, user_id, review_content, review_reg_date, review_score, order_id
	        <if test="reviewImg != null">, review_img</if>
	        <if test="reviewImgType != null">, review_img_type</if>
	        <if test="reviewImgName != null">, review_img_name</if>
		from review
		where order_id = #{orderId}
    	and product_id = #{productId}
	</select>
	
	<select id="getReviewByReviewId" resultType="Review" parameterType="int">
		select review_id, product_id, user_id, review_content, review_reg_date, review_score, order_id
	        <if test="reviewImg != null">, review_img</if>
	        <if test="reviewImgType != null">, review_img_type</if>
	        <if test="reviewImgName != null">, review_img_name</if>
		from review
		where review_id = #{reviewId}
	</select>

</mapper>